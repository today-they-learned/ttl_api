version: "3"

services:
  db:
    image: postgres
    expose:
    - "${POSTGRES_PORT}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./backups:/home/backups
    command: -p ${POSTGRES_PORT}
  web: &python
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PORT: ${PORT}
    image: ttl_api_web
    container_name: ttl_api_web
    command: >
      sh -c "./manage.py migrate
      && ./manage.py collectstatic --noinput
      && gunicorn config.wsgi -b 0.0.0.0:${PORT}"
    ports:
      - "${PORT}:${PORT}"
    restart: always
    volumes:
      - .:/web
    depends_on:
      - db
      - rabbitmq
      - celery_worker
  nginx:
    image: nginx
    container_name: nginx_service
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./staticfiles:/staticfiles
      - ./media:/media
    ports:
      - "80:80"
    depends_on:
      - web
  rabbitmq:
    image: rabbitmq:3.7-alpine
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - "15672"
  celery_worker:
    <<: *python
    container_name: 'backend_celery_worker'
    command: celery -A config worker --loglevel=info
    ports: []
    depends_on:
      - rabbitmq
      - db
  celery_beat:
    <<: *python
    container_name: 'backend_celery_beat'
    command: celery -A config beat --scheduler django_celery_beat.schedulers:DatabaseScheduler
    ports: []
    depends_on:
      - rabbitmq
      - db
  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
